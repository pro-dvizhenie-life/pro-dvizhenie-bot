"""
–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –∫–æ–º–∞–Ω–¥–∞ –∑–∞–ø—É—Å–∫–∞ –±–æ—Ç–∞ —Å –∞–±—Å–æ–ª—é—Ç–Ω—ã–º–∏ –ø—É—Ç—è–º–∏
"""

import os

from django.conf import settings
from django.core.management.base import BaseCommand


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞ (—É–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è)'

    def handle(self, *args, **options):
        # –ü—Ä–æ–≤–µ—Ä—è–µ–º —Ç–æ–∫–µ–Ω
        token = getattr(settings, 'TELEGRAM_BOT_TOKEN', None)
        if not token:
            self.stdout.write(
                self.style.ERROR('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω')
            )
            return

        self.stdout.write('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...')

        try:
            # –ê–±—Å–æ–ª—é—Ç–Ω—ã–π –ø—É—Ç—å –∫ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫—É
            handler_path = os.path.join(
                os.path.dirname(__file__),
                "..", "..", "..", "bots", "handlers", "telegram_handler.py"
            )
            handler_path = os.path.abspath(handler_path)

            if not os.path.exists(handler_path):
                self.stdout.write(
                    self.style.ERROR(f'‚ùå –§–∞–π–ª –Ω–µ –Ω–∞–π–¥–µ–Ω: {handler_path}')
                )
                return

            # –î–∏–Ω–∞–º–∏—á–µ—Å–∫–∏–π –∏–º–ø–æ—Ä—Ç
            import importlib.util
            spec = importlib.util.spec_from_file_location("telegram_handler", handler_path)
            telegram_handler = importlib.util.module_from_spec(spec)
            spec.loader.exec_module(telegram_handler)

            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            telegram_handler.telegram_bot.start_polling()

        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞: {e}')
            )
            import traceback
            traceback.print_exc()
