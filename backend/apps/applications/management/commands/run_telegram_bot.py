"""
Management –∫–æ–º–∞–Ω–¥–∞ –¥–ª—è –∑–∞–ø—É—Å–∫–∞ Telegram –±–æ—Ç–∞.
–ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ: python manage.py run_telegram_bot
"""

import os
import sys
import signal
from django.core.management.base import BaseCommand
from django.conf import settings


try:
    from ....bots.handlers.telegram_handler import telegram_bot
except ImportError as e:
    print(f"‚ùå –û—à–∏–±–∫–∞ –∏–º–ø–æ—Ä—Ç–∞: {e}")
    print("üõ†Ô∏è –ü—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç...")
    try:
        # –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –ø—É—Ç—å
        import importlib.util
        spec = importlib.util.spec_from_file_location(
            "telegram_handler",
            os.path.join(os.path.dirname(__file__), "..", "..", "..", "bots", "handlers", "telegram_handler.py")
        )
        telegram_handler = importlib.util.module_from_spec(spec)
        spec.loader.exec_module(telegram_handler)
        telegram_bot = telegram_handler.telegram_bot
    except Exception as e2:
        print(f"‚ùå –ê–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π –∏–º–ø–æ—Ä—Ç —Ç–æ–∂–µ –Ω–µ —Å—Ä–∞–±–æ—Ç–∞–ª: {e2}")
        raise


class Command(BaseCommand):
    help = '–ó–∞–ø—É—Å–∫–∞–µ—Ç Telegram –±–æ—Ç–∞ –≤ —Ä–µ–∂–∏–º–µ polling'

    def add_arguments(self, parser):
        parser.add_argument(
            '--stop',
            action='store_true',
            help='–û—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –±–æ—Ç–∞ (–≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)',
        )

    def handle(self, *args, **options):
        if options['stop']:
            self.stdout.write(
                self.style.WARNING('–û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞... (—Ñ—É–Ω–∫—Ü–∏–æ–Ω–∞–ª—å–Ω–æ—Å—Ç—å –≤ —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ)')
            )
            return

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ —Ç–æ–∫–µ–Ω–∞
        if not getattr(settings, 'TELEGRAM_BOT_TOKEN', None):
            self.stdout.write(
                self.style.ERROR('‚ùå TELEGRAM_BOT_TOKEN –Ω–µ –Ω–∞–π–¥–µ–Ω –≤ –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö Django')
            )
            self.stdout.write(
                self.style.WARNING('–î–æ–±–∞–≤—å—Ç–µ –≤ settings.py: TELEGRAM_BOT_TOKEN = "–≤–∞—à_—Ç–æ–∫–µ–Ω"')
            )
            return

        self.stdout.write(
            self.style.SUCCESS('ü§ñ –ó–∞–ø—É—Å–∫ Telegram –±–æ—Ç–∞...')
        )
        self.stdout.write(
            self.style.WARNING('–î–ª—è –æ—Å—Ç–∞–Ω–æ–≤–∫–∏ –Ω–∞–∂–º–∏—Ç–µ Ctrl+C')
        )

        # –û–±—Ä–∞–±–æ—Ç–∫–∞ graceful shutdown
        def signal_handler(sig, frame):
            self.stdout.write(
                self.style.WARNING('\nüõë –û—Å—Ç–∞–Ω–æ–≤–∫–∞ –±–æ—Ç–∞...')
            )
            sys.exit(0)

        signal.signal(signal.SIGINT, signal_handler)

        try:
            # –ó–∞–ø—É—Å–∫–∞–µ–º –±–æ—Ç–∞
            telegram_bot.start_polling()
        except KeyboardInterrupt:
            self.stdout.write(
                self.style.WARNING('\nüõë –ë–æ—Ç –æ—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω')
            )
        except Exception as e:
            self.stdout.write(
                self.style.ERROR(f'‚ùå –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—É—Å–∫–µ –±–æ—Ç–∞: {e}')
            )
