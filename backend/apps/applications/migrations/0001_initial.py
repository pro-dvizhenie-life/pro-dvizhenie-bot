# Generated by Django 5.2.6 on 2025-09-29 19:37

import django.db.models.deletion
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(max_length=64, verbose_name='Код вопроса')),
                ('type', models.CharField(choices=[('text', 'Текст'), ('number', 'Число'), ('date', 'Дата'), ('select_one', 'Один из списка'), ('select_many', 'Несколько из списка'), ('yes_no', 'Да/Нет'), ('file', 'Файл')], max_length=20, verbose_name='Тип вопроса')),
                ('label', models.CharField(max_length=300, verbose_name='Заголовок вопроса')),
                ('required', models.BooleanField(default=False, verbose_name='Обязательный')),
                ('payload', models.JSONField(blank=True, default=dict, verbose_name='Дополнительные настройки')),
            ],
            options={
                'verbose_name': 'Вопрос',
                'verbose_name_plural': 'Вопросы',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Step',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(max_length=64, verbose_name='Код шага')),
                ('title', models.CharField(max_length=200, verbose_name='Название шага')),
                ('order', models.PositiveIntegerField(verbose_name='Порядок показа')),
            ],
            options={
                'verbose_name': 'Шаг',
                'verbose_name_plural': 'Шаги',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.CreateModel(
            name='Survey',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(max_length=64, unique=True, verbose_name='Код анкеты')),
                ('title', models.CharField(max_length=200, verbose_name='Название анкеты')),
                ('version', models.PositiveIntegerField(default=1, verbose_name='Версия')),
                ('is_active', models.BooleanField(default=True, verbose_name='Активна')),
            ],
            options={
                'verbose_name': 'Анкета',
                'verbose_name_plural': 'Анкеты',
                'ordering': ('code', 'id'),
            },
        ),
        migrations.CreateModel(
            name='Application',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('public_id', models.UUIDField(default=uuid.uuid4, editable=False, unique=True, verbose_name='Публичный идентификатор')),
                ('status', models.CharField(choices=[('draft', 'Черновик'), ('submitted', 'Отправлена'), ('under_review', 'На рассмотрении'), ('approved', 'Одобрена'), ('rejected', 'Отклонена')], default='draft', max_length=20, verbose_name='Статус')),
                ('applicant_type', models.CharField(blank=True, max_length=20, verbose_name='Тип заявителя')),
                ('current_stage', models.IntegerField(default=0, verbose_name='Текущий этап')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создана')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Обновлена')),
                ('submitted_at', models.DateTimeField(blank=True, null=True, verbose_name='Отправлена')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
                ('current_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='applications_current', to='applications.step', verbose_name='Текущий шаг')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.PROTECT, related_name='applications', to='applications.survey', verbose_name='Анкета')),
            ],
            options={
                'verbose_name': 'Заявка',
                'verbose_name_plural': 'Заявки',
                'ordering': ('-created_at',),
            },
        ),
        migrations.CreateModel(
            name='ApplicationComment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('comment', models.TextField(verbose_name='Комментарий')),
                ('is_urgent', models.BooleanField(default=False, verbose_name='Срочно')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='comments', to='applications.application', verbose_name='Заявка')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='application_comments', to=settings.AUTH_USER_MODEL, verbose_name='Автор')),
            ],
            options={
                'verbose_name': 'Комментарий',
                'verbose_name_plural': 'Комментарии',
                'ordering': ('-created_at', 'id'),
            },
        ),
        migrations.CreateModel(
            name='ApplicationStatusHistory',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('old_status', models.CharField(max_length=20, verbose_name='Старый статус')),
                ('new_status', models.CharField(max_length=20, verbose_name='Новый статус')),
                ('created_at', models.DateTimeField(auto_now_add=True, verbose_name='Создан')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='status_history', to='applications.application', verbose_name='Заявка')),
                ('changed_by', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='status_changes', to=settings.AUTH_USER_MODEL, verbose_name='Изменён пользователем')),
            ],
            options={
                'verbose_name': 'История статуса',
                'verbose_name_plural': 'Истории статусов',
                'ordering': ('-created_at', 'id'),
            },
        ),
        migrations.CreateModel(
            name='Option',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.CharField(max_length=100, verbose_name='Значение')),
                ('label', models.CharField(max_length=200, verbose_name='Подпись')),
                ('order', models.PositiveIntegerField(default=0, verbose_name='Порядок')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='options', to='applications.question', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Вариант ответа',
                'verbose_name_plural': 'Варианты ответа',
                'ordering': ('order', 'id'),
            },
        ),
        migrations.AddField(
            model_name='question',
            name='step',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='questions', to='applications.step', verbose_name='Шаг'),
        ),
        migrations.AddField(
            model_name='step',
            name='survey',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='steps', to='applications.survey', verbose_name='Анкета'),
        ),
        migrations.CreateModel(
            name='DocumentRequirement',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('code', models.SlugField(max_length=64, verbose_name='Код требования')),
                ('label', models.CharField(max_length=200, verbose_name='Название документа')),
                ('expression', models.JSONField(blank=True, null=True, verbose_name='Условие необходимости')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='doc_requirements', to='applications.survey', verbose_name='Анкета')),
            ],
            options={
                'verbose_name': 'Требование по документу',
                'verbose_name_plural': 'Требования по документам',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='Condition',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('scope', models.CharField(choices=[('question', 'question'), ('step', 'step')], max_length=20, verbose_name='Область применения')),
                ('expression', models.JSONField(verbose_name='Выражение JSON-logic')),
                ('question', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='visibility_conditions', to='applications.question', verbose_name='Вопрос')),
                ('from_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='outgoing_conditions', to='applications.step', verbose_name='Исходный шаг')),
                ('goto_step', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, related_name='incoming_conditions', to='applications.step', verbose_name='Следующий шаг')),
                ('survey', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='conditions', to='applications.survey', verbose_name='Анкета')),
            ],
            options={
                'verbose_name': 'Условие показа',
                'verbose_name_plural': 'Условия показа',
                'ordering': ('id',),
            },
        ),
        migrations.CreateModel(
            name='AuditLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('action', models.CharField(max_length=50, verbose_name='Действие')),
                ('table_name', models.CharField(max_length=50, verbose_name='Таблица')),
                ('record_id', models.UUIDField(blank=True, null=True, verbose_name='ID записи')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('timestamp', models.DateTimeField(auto_now_add=True, verbose_name='Время')),
                ('user', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='audit_logs', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Запись аудита',
                'verbose_name_plural': 'Журнал аудита',
                'ordering': ('-timestamp', 'id'),
                'indexes': [models.Index(fields=['table_name', 'timestamp'], name='application_table_n_4b54ff_idx')],
            },
        ),
        migrations.CreateModel(
            name='DataConsent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('consent_type', models.CharField(choices=[('pdn_152', 'Персональные данные (152-ФЗ)')], default='pdn_152', max_length=50, verbose_name='Тип согласия')),
                ('is_given', models.BooleanField(default=False, verbose_name='Дано')),
                ('given_at', models.DateTimeField(blank=True, null=True, verbose_name='Дата согласия')),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True, verbose_name='IP-адрес')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='consents', to='applications.application', verbose_name='Заявка')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='data_consents', to=settings.AUTH_USER_MODEL, verbose_name='Пользователь')),
            ],
            options={
                'verbose_name': 'Согласие',
                'verbose_name_plural': 'Согласия',
                'ordering': ('-given_at', 'id'),
                'unique_together': {('user', 'application', 'consent_type')},
            },
        ),
        migrations.CreateModel(
            name='Answer',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('value', models.JSONField(verbose_name='Значение')),
                ('updated_at', models.DateTimeField(auto_now=True, verbose_name='Изменён')),
                ('application', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='applications.application', verbose_name='Заявка')),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='answers', to='applications.question', verbose_name='Вопрос')),
            ],
            options={
                'verbose_name': 'Ответ',
                'verbose_name_plural': 'Ответы',
                'ordering': ('-updated_at', 'id'),
                'unique_together': {('application', 'question')},
            },
        ),
        migrations.AlterUniqueTogether(
            name='question',
            unique_together={('step', 'code')},
        ),
        migrations.AlterUniqueTogether(
            name='step',
            unique_together={('survey', 'code')},
        ),
    ]
