#!/usr/bin/env python
import os
import sys
import django
from pathlib import Path

BASE_DIR = Path(__file__).resolve().parent
sys.path.insert(0, str(BASE_DIR))

print("üîç –î–µ—Ç–∞–ª—å–Ω–∞—è –¥–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∏–º–ø–æ—Ä—Ç–æ–≤...")
print(f"BASE_DIR: {BASE_DIR}")
print(f"Python path: {sys.path}")

os.environ.setdefault('DJANGO_SETTINGS_MODULE', 'config.settings')

try:
    django.setup()
    print("‚úÖ Django –Ω–∞—Å—Ç—Ä–æ–µ–Ω")
except Exception as e:
    print(f"‚ùå Django: {e}")

# –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–∞–∂–¥—ã–π –∏–º–ø–æ—Ä—Ç –æ—Ç–¥–µ–ª—å–Ω–æ
imports_to_check = [
    ("telegram", "Update"),
    ("telegram.ext", "Application"),
    ("apps.applications.bots.telegram_models", "TelegramUser"),
    ("apps.applications.bots.database", "init_telegram_db"),
    ("apps.applications.bots.handlers.telegram_handlers.start", "start"),
    ("apps.applications.bots.handlers.telegram_handlers.help", "help_command"),
    ("apps.applications.bots.handlers.telegram_handlers.form", "form_entry"),
    ("apps.applications.bots.handlers.telegram_handlers.telegram_handler", "telegram_bot"),
]

for module_path, item_name in imports_to_check:
    try:
        if "." in module_path:
            # –î–ª—è –º–æ–¥—É–ª–µ–π —Å —Ç–æ—á–∫–∞–º–∏
            module_parts = module_path.split(".")
            module = __import__(module_path)
            for part in module_parts[1:]:
                module = getattr(module, part)
        else:
            # –î–ª—è –ø—Ä–æ—Å—Ç—ã—Ö –º–æ–¥—É–ª–µ–π
            module = __import__(module_path)

        if item_name:
            item = getattr(module, item_name)
            print(f"‚úÖ {module_path}.{item_name} - –û–ö")
        else:
            print(f"‚úÖ {module_path} - –û–ö")

    except ImportError as e:
        print(f"‚ùå {module_path}.{item_name}: {e}")
    except AttributeError as e:
        print(f"‚ùå {module_path}.{item_name}: {e}")

print("‚úÖ –î–∏–∞–≥–Ω–æ—Å—Ç–∏–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞")
