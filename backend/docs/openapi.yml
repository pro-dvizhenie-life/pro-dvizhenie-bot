openapi: 3.0.3
info:
  title: Pro Dvizhenie API
  version: 1.0.0
  description: OpenAPI схема и интерактивная документация для backend части проекта
    «Движение».
paths:
  /api/v1/applications/{public_id}/comments/:
    get:
      operationId: v1_applications_comments_list
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationCommentOut'
          description: ''
    post:
      operationId: v1_applications_comments_create
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ApplicationCommentIn'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ApplicationCommentIn'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ApplicationCommentIn'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationCommentOut'
          description: ''
  /api/v1/applications/{public_id}/consents/:
    post:
      operationId: v1_applications_consents_create
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DataConsent'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DataConsent'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DataConsent'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DataConsent'
          description: ''
  /api/v1/applications/{public_id}/draft/:
    get:
      operationId: v1_applications_draft_retrieve
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOut'
          description: ''
  /api/v1/applications/{public_id}/draft/patch/:
    patch:
      operationId: v1_applications_draft_patch_partial_update
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedDraftPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedDraftPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedDraftPatch'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOut'
          description: ''
  /api/v1/applications/{public_id}/next/:
    post:
      operationId: v1_applications_next_create
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DraftPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DraftPatch'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NextOut'
          description: ''
  /api/v1/applications/{public_id}/submit/:
    post:
      operationId: v1_applications_submit_create
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DraftPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DraftPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DraftPatch'
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/SubmitResponse'
          description: ''
  /api/v1/applications/admin/applications/:
    get:
      operationId: v1_applications_admin_applications_list
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/ApplicationShort'
          description: ''
  /api/v1/applications/admin/applications/{public_id}/:
    get:
      operationId: v1_applications_admin_applications_retrieve
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ApplicationDetail'
          description: ''
  /api/v1/applications/admin/applications/{public_id}/status/:
    patch:
      operationId: v1_applications_admin_applications_status_partial_update
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatchedApplicationStatusPatch'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatchedApplicationStatusPatch'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatchedApplicationStatusPatch'
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/StatusResponse'
          description: ''
  /api/v1/applications/admin/applications/{public_id}/timeline/:
    get:
      operationId: v1_applications_admin_applications_timeline_retrieve
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TimelineResponse'
          description: ''
  /api/v1/applications/admin/export.csv:
    get:
      operationId: v1_applications_admin_export.csv_retrieve
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          description: CSV export of applications
  /api/v1/applications/forms/{survey_code}/sessions/:
    post:
      operationId: v1_applications_forms_sessions_create
      parameters:
      - in: path
        name: survey_code
        schema:
          type: string
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CreateSessionRequest'
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DraftOut'
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: v1_auth_login_create
      description: Логин по email/паролю с выдачей JWT и http-only cookies.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Login'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Login'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Login'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokens'
          description: ''
  /api/v1/auth/logout/:
    post:
      operationId: v1_auth_logout_create
      description: 'Выход пользователя: очищает cookies и Django-сессию.'
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '204':
          description: Успешный выход
  /api/v1/auth/register/:
    post:
      operationId: v1_auth_register_create
      description: Регистрация нового пользователя и моментальная авторизация.
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Register'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Register'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Register'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AuthTokens'
          description: ''
  /api/v1/users/me/:
    get:
      operationId: v1_users_me_retrieve
      description: Просмотр информации о текущем пользователе.
      tags:
      - v1
      security:
      - jwtAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
          description: ''
  /api/v1/documents/uploads/:
    post:
      operationId: v1_documents_uploads_create
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadRequest'
        required: true
      security:
      - jwtAuth: []
      - {}
      responses:
        '201':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentUploadResponse'
          description: ''
  /api/v1/documents/uploads/{version_id}/complete/:
    post:
      operationId: v1_documents_uploads_complete_create
      parameters:
      - in: path
        name: version_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DocumentUploadComplete'
        required: false
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentVersion'
          description: ''
  /api/v1/documents/applications/{public_id}/:
    get:
      operationId: v1_documents_applications_list
      parameters:
      - in: path
        name: public_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DocumentListResponse'
          description: ''
  /api/v1/documents/{document_id}/:
    delete:
      operationId: v1_documents_destroy
      parameters:
      - in: path
        name: document_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - v1
      security:
      - jwtAuth: []
      - {}
      responses:
        '204':
          description: ''
components:
  schemas:
    AnswerPatchItem:
      type: object
      description: Элемент патча ответа пользователя.
      properties:
        question_code:
          type: string
          pattern: ^[-a-zA-Z0-9_]+$
        value: {}
      required:
      - question_code
      - value
    ApplicationCommentIn:
      type: object
      description: Входные данные для создания комментария.
      properties:
        comment:
          type: string
        is_urgent:
          type: boolean
          default: false
      required:
      - comment
    ApplicationCommentOut:
      type: object
      description: Комментарий заявки для отображения.
      properties:
        id:
          type: integer
          readOnly: true
        comment:
          type: string
          title: Комментарий
        is_urgent:
          type: boolean
          title: Срочно
        user_id:
          type: integer
          readOnly: true
        user_email:
          type: string
          format: email
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создан
      required:
      - comment
      - created_at
      - id
      - user_email
      - user_id
    ApplicationDetail:
      type: object
      description: Полная информация о заявке.
      properties:
        public_id:
          type: string
          format: uuid
          readOnly: true
          title: Публичный идентификатор
        survey_code:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
        applicant_type:
          type: string
          title: Тип заявителя
          maxLength: 20
        current_stage:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          title: Текущий этап
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создана
        submitted_at:
          type: string
          format: date-time
          nullable: true
          title: Отправлена
        answers:
          type: object
          additionalProperties: {}
          readOnly: true
        comments:
          type: array
          description: Ошибки валидации ответов
          items:
            type: object
            properties:
              question: { type: string }
              message: { type: string }
        document_errors:
          type: array
          description: Ошибки по документам (если есть)
          items:
            type: object
            additionalProperties: {}
          readOnly: true
        status_history:
          type: array
          items:
            $ref: '#/components/schemas/ApplicationStatusHistory'
          readOnly: true
        consents:
          type: array
          items:
            $ref: '#/components/schemas/DataConsent'
          readOnly: true
      required:
      - answers
      - comments
      - consents
      - created_at
      - public_id
      - status_history
      - survey_code
    ApplicationShort:
      type: object
      description: Краткая информация о заявке для списков.
      properties:
        public_id:
          type: string
          format: uuid
          readOnly: true
          title: Публичный идентификатор
        survey_code:
          type: string
          readOnly: true
        status:
          allOf:
          - $ref: '#/components/schemas/StatusEnum'
          title: Статус
        applicant_type:
          type: string
          title: Тип заявителя
          maxLength: 20
        current_stage:
          type: integer
          maximum: 9223372036854775807
          minimum: -9223372036854775808
          format: int64
          title: Текущий этап
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создана
        submitted_at:
          type: string
          format: date-time
          nullable: true
          title: Отправлена
      required:
      - created_at
      - public_id
      - survey_code
    ApplicationStatusHistory:
      type: object
      description: Сериализатор истории статусов.
      properties:
        id:
          type: integer
          readOnly: true
        old_status:
          type: string
          title: Старый статус
          maxLength: 20
        new_status:
          type: string
          title: Новый статус
          maxLength: 20
        changed_by_id:
          type: integer
          readOnly: true
        changed_by_email:
          type: string
          format: email
          readOnly: true
        created_at:
          type: string
          format: date-time
          readOnly: true
          title: Создан
      required:
      - changed_by_email
      - changed_by_id
      - created_at
      - id
      - new_status
      - old_status
    AuthTokens:
      type: object
      description: 'Ответ при успешной аутентификации: пара токенов и данные пользователя.'
      properties:
        access:
          type: string
        refresh:
          type: string
        user:
          $ref: '#/components/schemas/User'
      required:
      - access
      - refresh
      - user
    ConsentTypeEnum:
      enum:
      - pdn_152
      type: string
      description: '* `pdn_152` - Персональные данные (152-ФЗ)'
    CreateSessionRequest:
      type: object
      description: Параметры создания сессии заполнения анкеты.
      properties:
        applicant_type:
          type: string
    DataConsent:
      type: object
      description: Сериализатор согласий.
      properties:
        consent_type:
          allOf:
          - $ref: '#/components/schemas/ConsentTypeEnum'
          default: pdn_152
          title: Тип согласия
        is_given:
          type: boolean
          default: true
          title: Дано
        given_at:
          type: string
          format: date-time
          readOnly: true
          nullable: true
          title: Дата согласия
        ip_address:
          type: string
          readOnly: true
          nullable: true
          title: IP-адрес
      required:
      - given_at
      - ip_address
    DraftOut:
      type: object
      description: Снимок состояния черновика анкеты.
      properties:
        public_id:
          type: string
          format: uuid
        current_stage:
          type: integer
        current_step:
          allOf:
          - $ref: '#/components/schemas/Step'
          nullable: true
        answers:
          type: object
          additionalProperties: {}
      required:
      - current_stage
      - current_step
      - public_id
    DraftPatch:
      type: object
      description: Входные данные для обновления черновика анкеты.
      properties:

        answers:
          type: array
          items:
            $ref: '#/components/schemas/AnswerPatchItem'
        step_code:
          type: string
    DocumentUploadRequest:
      type: object
      description: Параметры запроса на получение presigned-данных.
      properties:
        application_id:
          type: string
          format: uuid
        requirement_code:
          type: string
        document_id:
          type: string
          format: uuid
        filename:
          type: string
        content_type:
          type: string
        size:
          type: integer
          minimum: 1
      required:
      - application_id
      - content_type
      - filename
      - size
    PresignedUpload:
      type: object
      properties:
        url:
          type: string
          format: uri
        method:
          type: string
        fields:
          type: object
          additionalProperties:
            type: string
        headers:
          type: object
          additionalProperties:
            type: string
      required:
      - method
      - url
    DocumentUploadResponse:
      type: object
      properties:
        document_id:
          type: string
          format: uuid
        version_id:
          type: string
          format: uuid
        upload:
          $ref: '#/components/schemas/PresignedUpload'
      required:
      - document_id
      - upload
      - version_id
    DocumentUploadComplete:
      type: object
      properties:
        etag:
          type: string
        checksum:
          type: string
    DocumentVersionStatus:
      type: string
      enum:
      - pending
      - uploaded
      - available
      - rejected
      description: |
        * `pending` - Ожидает загрузки
        * `uploaded` - Загружен
        * `available` - Готов к использованию
        * `rejected` - Отклонён
    DocumentAntivirusStatus:
      type: string
      enum:
      - pending
      - clean
      - infected
      - failed
      - skipped
      description: |
        * `pending` - Ожидает проверки
        * `clean` - Проверен
        * `infected` - Выявлено заражение
        * `failed` - Ошибка проверки
        * `skipped` - Проверка не выполнялась
    DocumentVersion:
      type: object
      properties:
        document_id:
          type: string
          format: uuid
          readOnly: true
        version_id:
          type: string
          format: uuid
          readOnly: true
        version:
          type: integer
          readOnly: true
        status:
          $ref: '#/components/schemas/DocumentVersionStatus'
        antivirus_status:
          $ref: '#/components/schemas/DocumentAntivirusStatus'
        requirement_code:
          type: string
          nullable: true
          readOnly: true
        requirement_label:
          type: string
          nullable: true
          readOnly: true
        original_name:
          type: string
          readOnly: true
        mime_type:
          type: string
          readOnly: true
        size:
          type: integer
          readOnly: true
        uploaded_at:
          type: string
          format: date-time
          nullable: true
          readOnly: true
        download_url:
          type: string
          format: uri
          nullable: true
          readOnly: true
      required:
      - antivirus_status
      - document_id
      - mime_type
      - original_name
      - status
      - version
      - version_id
    DocumentListResponse:
      type: object
      properties:
        documents:
          type: array
          items:
            $ref: '#/components/schemas/DocumentVersion'
      required:
      - documents
    Login:
      type: object
      description: Сериализатор для логина по email и паролю.
      properties:
        email:
          type: string
          format: email
        password:
          type: string
          writeOnly: true
      required:
      - email
      - password
    NextOut:
      type: object
      description: Ответ при переходе к следующему шагу.
      properties:
        public_id:
          type: string
          format: uuid
        current_stage:
          type: integer
        current_step:
          allOf:
          - $ref: '#/components/schemas/Step'
          nullable: true
        answers:
          type: object
          additionalProperties: {}
      required:
      - current_stage
      - current_step
      - public_id
    Option:
      type: object
      description: Представление варианта ответа.
      properties:
        value:
          type: string
          title: Значение
          maxLength: 100
        label:
          type: string
          title: Подпись
          maxLength: 200
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Порядок
      required:
      - label
      - value
    PatchedApplicationStatusPatch:
      type: object
      description: Изменение статуса заявки.
      properties:
        new_status:
          type: string
    PatchedDraftPatch:
      type: object
      description: Входные данные для обновления черновика анкеты.
      properties:
        answers:
          type: array
          items:
            $ref: '#/components/schemas/AnswerPatchItem'
        step_code:
          type: string
    Question:
      type: object
      description: Представление вопроса с вариантами ответа.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          title: Код вопроса
          maxLength: 64
          pattern: ^[-a-zA-Z0-9_]+$
        type:
          allOf:
          - $ref: '#/components/schemas/TypeEnum'
          title: Тип вопроса
        label:
          type: string
          title: Заголовок вопроса
          maxLength: 300
        required:
          type: boolean
          title: Обязательный
        payload:
          title: Дополнительные настройки
        options:
          type: array
          items:
            $ref: '#/components/schemas/Option'
          readOnly: true
      required:
      - code
      - id
      - label
      - options
      - type
    Register:
      type: object
      description: Сериализатор регистрации пользователя.
      properties:
        email:
          type: string
          format: email
        phone:
          type: string
          maxLength: 32
        password:
          type: string
          writeOnly: true
          minLength: 8
      required:
      - email
      - password
      - phone
    RoleEnum:
      enum:
      - applicant
      - employee
      - admin
      type: string
      description: |-
        * `applicant` - Заявитель
        * `employee` - Сотрудник
        * `admin` - Администратор
    StatusEnum:
      enum:
      - draft
      - submitted
      - under_review
      - approved
      - rejected
      type: string
      description: |-
        * `draft` - Черновик
        * `submitted` - Отправлена
        * `under_review` - На рассмотрении
        * `approved` - Одобрена
        * `rejected` - Отклонена
    StatusResponse:
      type: object
      description: Унифицированный ответ со статусом заявки.
      properties:
        status:
          type: string
      required:
      - status
    Step:
      type: object
      description: Представление шага анкеты.
      properties:
        id:
          type: integer
          readOnly: true
        code:
          type: string
          title: Код шага
          maxLength: 64
          pattern: ^[-a-zA-Z0-9_]+$
        title:
          type: string
          title: Название шага
          maxLength: 200
        order:
          type: integer
          maximum: 9223372036854775807
          minimum: 0
          format: int64
          title: Порядок показа
        questions:
          type: array
          items:
            $ref: '#/components/schemas/Question'
          readOnly: true
      required:
      - code
      - id
      - order
      - questions
      - title
    SubmitResponse:
      type: object
      description: Ответ после успешной отправки анкеты.
      properties:
        public_id:
          type: string
          format: uuid
        status:
          type: string
      required:
      - public_id
      - status
    TimelineEvent:
      type: object
      description: Элемент таймлайна заявки.
      properties:
        type:
          type: string
        data:
          type: object
          additionalProperties: {}
        created_at:
          type: string
          format: date-time
      required:
      - created_at
      - data
      - type
    TimelineResponse:
      type: object
      description: Ответ для таймлайна заявки.
      properties:
        timeline:
          type: array
          items:
            $ref: '#/components/schemas/TimelineEvent'
      required:
      - timeline
    TypeEnum:
      enum:
      - text
      - number
      - date
      - select_one
      - select_many
      - yes_no
      - file
      type: string
      description: |-
        * `text` - Текст
        * `number` - Число
        * `date` - Дата
        * `select_one` - Один из списка
        * `select_many` - Несколько из списка
        * `yes_no` - Да/Нет
        * `file` - Файл
    User:
      type: object
      description: Сериализатор пользователя.
      properties:
        id:
          type: integer
          readOnly: true
          title: Идентификатор
        email:
          type: string
          format: email
          readOnly: true
          title: Электронная почта
        phone:
          type: string
          readOnly: true
          title: Номер телефона
        role:
          allOf:
          - $ref: '#/components/schemas/RoleEnum'
          readOnly: true
          title: Роль
        telegram_username:
          type: string
          readOnly: true
          nullable: true
          title: Имя пользователя в Telegram
      required:
      - email
      - id
      - phone
      - role
      - telegram_username
  securitySchemes:
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
