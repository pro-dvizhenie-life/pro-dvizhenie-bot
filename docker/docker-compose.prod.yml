version: "3.9"

services:
  db:
    image: postgres:16
    container_name: dvizhenie-db
    environment:
      POSTGRES_DB: dvizhenie
      POSTGRES_USER: dvizhenie
      POSTGRES_PASSWORD: change-me
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  backend:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: dvizhenie-backend
    ports:
      - "8000:8000"
    env_file:
      - ../.env
    volumes:
      - ../.env:/app/.env:ro
    environment:
      DJANGO_DEBUG: "0"
      DJANGO_ALLOWED_HOSTS: "127.0.0.1,0.0.0.0,localhost,51.250.113.76"
      DJANGO_COLLECTSTATIC: "1"
      POSTGRES_HOST: db
      POSTGRES_DB: dvizhenie
      POSTGRES_USER: dvizhenie
      POSTGRES_PASSWORD: change-me
      POSTGRES_PORT: 5432
    depends_on:
      - db
    restart: unless-stopped
    command: ["gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000", "--chdir", "backend"]

  bot:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: dvizhenie-bot
    env_file:
      - ../.env
    volumes:
      - ../.env:/app/.env:ro
    environment:
      DJANGO_DEBUG: "0"
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB:-dvizhenie}
      POSTGRES_USER: ${POSTGRES_USER:-dvizhenie}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-me}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      SKIP_MIGRATIONS: "1"
    depends_on:
      - db
    restart: unless-stopped
    command: ["python", "backend/manage.py", "run_telegram_bot"]

volumes:
  db-data:
