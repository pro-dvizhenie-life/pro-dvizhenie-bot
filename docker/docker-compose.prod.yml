services:
  db:
    image: postgres:16
    container_name: dvizhenie-db
    environment:
      POSTGRES_DB: dvizhenie
      POSTGRES_USER: dvizhenie
      POSTGRES_PASSWORD: change-me
    volumes:
      - db-data:/var/lib/postgresql/data
    restart: unless-stopped

  minio:
    image: minio/minio:latest
    env_file:
      - ../.env.prod
    container_name: dvizhenie-minio
    command: ["server", "/data", "--console-address", ":9001"]
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
    volumes:
      - minio-data:/data
    ports:
      - "9000:9000"   # S3 API
      - "9001:9001"   # Web console
    healthcheck:
      test: ["CMD", "curl", "-f", "http://127.0.0.1:9000/minio/health/ready"]
      interval: 10s
      timeout: 3s
      retries: 10
    restart: unless-stopped

  minio-setup:
    image: minio/mc:latest
    env_file:
      - ../.env.prod
    depends_on:
      minio:
        condition: service_healthy
    environment:
      MINIO_ROOT_USER: ${MINIO_ROOT_USER:-minioadmin}
      MINIO_ROOT_PASSWORD: ${MINIO_ROOT_PASSWORD:-minioadmin}
      MINIO_BUCKET: ${MINIO_BUCKET:-documents}
    entrypoint: ["/bin/sh","-lc"]
    command: |
      set -e
      mc alias set local http://minio:9000 "$MINIO_ROOT_USER" "$MINIO_ROOT_PASSWORD" || { echo "WARN: mc alias set failed"; exit 0; }
      mc mb -p local/$MINIO_BUCKET || true
      mc anonymous set private local/$MINIO_BUCKET || true
      echo "MinIO bucket '$MINIO_BUCKET' ready"
    restart: "no"

  backend:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: dvizhenie-backend
    ports:
      - "8083:8000"
    env_file:
      - ../.env.prod
    volumes:
      - ../.env.prod:/app/.env:ro
      - ../backend/staticfiles:/app/backend/staticfiles
      - ../backend/media:/app/backend/media
    environment:
      DJANGO_DEBUG: "0"
      DJANGO_ALLOWED_HOSTS: "pro-dvizhenie.51-250-113-76.sslip.io,51.250.113.76,localhost,127.0.0.1,0.0.0.0"
      DJANGO_COLLECTSTATIC: "1"
      POSTGRES_HOST: db
      POSTGRES_DB: dvizhenie
      POSTGRES_USER: dvizhenie
      POSTGRES_PASSWORD: change-me
      POSTGRES_PORT: 5432
    depends_on:
      - db
      - minio
      - minio-setup
    restart: unless-stopped
    command: ["gunicorn", "config.wsgi:application", "--bind", "0.0.0.0:8000", "--chdir", "backend"]

  bot:
    build:
      context: ..
      dockerfile: Dockerfile
    container_name: dvizhenie-bot
    env_file:
      - ../.env.prod
    volumes:
      - ../.env.prod:/app/.env:ro
    environment:
      DJANGO_DEBUG: "0"
      POSTGRES_HOST: db
      POSTGRES_DB: ${POSTGRES_DB:-dvizhenie}
      POSTGRES_USER: ${POSTGRES_USER:-dvizhenie}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-change-me}
      POSTGRES_PORT: ${POSTGRES_PORT:-5432}
      SKIP_MIGRATIONS: "1"
    depends_on:
      - db
    restart: unless-stopped
    command: ["python", "backend/manage.py", "run_telegram_bot"]

volumes:
  db-data:
  minio-data: